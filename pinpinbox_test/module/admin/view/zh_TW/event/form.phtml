<?php echo $form?>
<script>
$(window).load(function() {
	$('#form').validate({
		rules: {},
		submitHandler: function() {
			if ($('#starttime').val() >= $('#endtime').val()) {
				formerror('<?php echo _('[Start Time] must be less than the [End Time]')?>');
				return;
			}

			//award
			var a_award = {};
			for (var k0 in keyvalueremark) {
				var v0 = keyvalueremark[k0];
				$.each($('input[name="award_'+ v0 +'[]"]'), function(k1, v1) {
					if ('undefined' === typeof(a_award[k1])) a_award[k1] = {};
					a_award[k1][v0] = $(this).val();
				});
			}
			if (!Object.keys(a_award).length) a_award = null;
			
			$.post('<?php echo $action?>', {
				//form
				<?php if ('edit' == $_GET['act']) {?>
				<?php echo M_CLASS?>_id: $('#<?php echo M_CLASS?>_id').val(),
				<?php }?>
				name: $('#name').val(),
				title: $('#title').val(),
				image: $('#image').val(),
				image_promote: $('#image_promote').val(),
                image_960x540: $('#image_960x540').val(),
				description: CKEDITOR.instances['description'].getData(),
				award: a_award,
				company: $('#company').val(),
				vote: $('#vote').val(),
				contribution: $('#contribution').val(),
				show_rank_num: $('#show_rank_num').val(),
				starttime: $('#starttime').val(),
				endtime: $('#endtime').val(),
                contribute_starttime: $('#contribute_starttime').val(),
				contribute_endtime: $('#contribute_endtime').val(),
                vote_starttime: $('#vote_starttime').val(),
				vote_endtime: $('#vote_endtime').val(),
				index_display: ($("#index_display").prop("checked")) ? 1 : 0 ,
				exchange_page: $('input[name="exchange_page"]:checked').val(),
				prefix_text: $('#prefix_text').val(),
				act: $('input[name="act"]:checked').val(),
			}, function(r) {
				r = $.parseJSON(r);
				switch (r.result) {
					case 0:formerror(r.message);break;
					case 1:formconfirm(r);break;
				}
			});
		}
	});

	<?php if ('edit' == $_GET['act']) {?>
	//eventjoin
    $('#eventjoin-grid').kendoGrid({
    	columns: [
			{
				title: 'album',
				columns: [
					{field: 'album_id', attributes: {'class': 'number'}, filterable: {ui: function(e){e.kendoNumericTextBox({format: 'n0'});}}},
					{title: '@info', field: 'albumX', attributes: {'class': 'string'}, encoded: false, filterable: false, sortable: false},
				]
			},
			{field: 'inserttime', attributes: {'class': 'date'}, filterable: {ui: function(e){e.kendoDateTimePicker({format: 'yyyy-MM-dd HH:mm:ss'});}}},
			{field: 'features', attributes: {'class': 'string'}, encoded: false,},
		],
		dataBinding: function(e) {},
		dataBound: function(e) {},
        dataSource: new kendo.data.DataSource({
        	filter: {field: '<?php echo M_CLASS?>_id', operator: 'eq', value: <?php echo $event_id?>},
    		page: 1,
    		pageSize: gridpageSize,
    		schema: {
    			data: function(r){return r.data;},
    			total: function(r){return r.total;}
    		},
    		serverPaging: true,
    		serverSorting: true,
    		serverFiltering: true,
    		sort: {field: 'inserttime', dir: 'desc'},
    		transport: {
    			read: {
    				data: {'case': 'eventjoin'},
    				dataType: 'json', //"jsonp" is required for cross-domain requests; use "json" for same-domain requests
    				type: 'POST',
    				url: '<?php echo self::url(M_CLASS, 'json')?>',
    			}
    		},
    	}),
        filterable: true,
        pageable: {
            refresh: true,
            input: true,
            pageSize: gridpageSize,
            pageSizes: gridpageSizes,
        },
        reorderable: true,
        resizable: true,
        selectable: true,
        sortable: true,
		toolbar: [
		  	'excel',
		],
    });

	//eventvote
    $('#eventvote-grid').kendoGrid({
    	columns: [
			{
				title: 'user',
				columns: [
					{field: 'user_id', attributes: {'class': 'number'}, filterable: {ui: function(e){e.kendoNumericTextBox({format: 'n0'});}}},
					{title: '@info', field: 'userX', attributes: {'class': 'string'}, encoded: false, filterable: false, sortable: false}
				]
			},
			{
				title: 'album',
				columns: [
					{field: 'album_id', attributes: {'class': 'number'}, filterable: {ui: function(e){e.kendoNumericTextBox({format: 'n0'});}}},
					{title: '@info', field: 'albumX', attributes: {'class': 'string'}, encoded: false, filterable: false, sortable: false}
				]
			},
			{field: 'inserttime', attributes: {'class': 'date'}, filterable: {ui: function(e){e.kendoDateTimePicker({format: 'yyyy-MM-dd HH:mm:ss'});}}},
		],
		dataBinding: function(e) {},
		dataBound: function(e) {},
        dataSource: new kendo.data.DataSource({
        	filter: {field: '<?php echo M_CLASS?>_id', operator: 'eq', value: <?php echo $event_id?>},
    		page: 1,
    		pageSize: gridpageSize,
    		schema: {
    			data: function(r){return r.data;},
    			total: function(r){return r.total;}
    		},
    		serverPaging: true,
    		serverSorting: true,
    		serverFiltering: true,
    		sort: {field: 'inserttime', dir: 'desc'},
    		transport: {
    			read: {
    				data: {'case': 'eventvote'},
    				dataType: 'json', //"jsonp" is required for cross-domain requests; use "json" for same-domain requests
    				type: 'POST',
    				url: '<?php echo self::url(M_CLASS, 'json')?>',
    			}
    		},
    	}),
        filterable: true,
        pageable: {
            refresh: true,
            input: true,
            pageSize: gridpageSize,
            pageSizes: gridpageSizes,
        },
        reorderable: true,
        resizable: true,
        selectable: true,
        sortable: true,
		toolbar: [
		  	'excel',
		],
    });
    <?php }?>
});

function removeAlbum(id) {
    box = new jBox('Confirm', {
        id : 'jBox_removeAlbum',
        cancelButton: '<?php echo _('No')?>',
        confirmButton: '<?php echo _('Yes')?>',
        onOpen : function() {           
        },
        confirm: function() {
			$.post('<?php echo self::url('event', 'remove_album') ?>', {
				event_id : $('#<?php echo M_CLASS?>_id').val(),
				album_id : id,
			}, function(r) {
				r = $.parseJSON(r);
				switch (r.result) {
	                case 0:formerror(r.message);break;
	                case 1:formconfirm(r);break;
				}
			});
        },
        onCloseComplete: function() {   
            box.destroy();
        }
    }).setContent(
        `<div class="content">
            <p><?php echo _('確定要撤下此相本投稿資格?')?></p>
            <p><?php echo _('撤下後相本投票數將一併清除')?></p>
        </div>`
    ).open();
}
</script>